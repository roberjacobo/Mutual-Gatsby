{"version":3,"sources":["webpack:///./src/redux/actions/clients.js","webpack:///./src/pages/addClient.jsx"],"names":["parseClients","data","type","READ_ALL_CLIENTS","payload","getClients","dispatch","a","axios","get","response","editClients","EDIT_CLIENT","editClient","url","method","headers","alert","status","addNewClient","ADD_CLIENT","addClient","reqObj","schema","yup","UserId","required","Nombre","ApellidoPat","ApellidoMat","Curp","Colonia","Direccion","Celular","Telefono","Correo","Adeudo","Tipo","Terms","FechaInscripcion","connect","state","clients","bindActionCreators","Actions","id","location","console","log","client","filter","_id","useState","Estado","values","setValues","handleChange","event","preventDefault","target","name","value","sendData","className","validationSchema","onSubmit","initialValues","handleBlur","touched","errors","isValid","isInvalid","noValidate","Row","Group","as","Col","md","controlId","Label","Control","placeholder","onChange","Feedback","apellidoPat","aria-describedby","Check","label","iaValid","feedback"],"mappings":"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","file":"component---src-pages-add-client-jsx-808eb262ad0813524f6f.js","sourcesContent":["import { READ_ALL_CLIENTS, ADD_CLIENT, EDIT_CLIENT } from \"../actionTypes\"\r\nimport axios from \"axios\"\r\n\r\n\r\n//Lectura de clientes\r\nconst parseClients = data => ({\r\n  type: READ_ALL_CLIENTS,\r\n  payload: data,\r\n})\r\n\r\nexport const getClients = () => async dispatch => {\r\n  const response = await axios.get(\r\n    \"http://localhost:3000/api/clients\"\r\n  )\r\n    const { data } = response\r\n    return dispatch(parseClients(data))\r\n  }\r\n\r\n  //Actualizar clientes\r\n  const editClients = data => ({\r\n    type: EDIT_CLIENT,\r\n    payload: data,\r\n  })\r\n  \r\n  export const editClient = data => async dispatch => {\r\n    const response = await axios({\r\n      url: \"http://localhost:3000/api/clients/\",\r\n      method: \"PUT\",\r\n      headers,\r\n      data,\r\n    })\r\n    const { data } = response\r\n    alert(response.data.status)\r\n    return dispatch(editClients(data))\r\n  }\r\n\r\n  //Ingresar nuevos clientes\r\n  const addNewClient = data => ({\r\n    type: ADD_CLIENT,\r\n    payload: data,\r\n  })\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n}\r\n\r\nexport const addClient = data => async dispatch => {\r\n  const reqObj = {\r\n    url: \"http://localhost:3000/api/clients\",\r\n    method: \"POST\",\r\n    headers,\r\n    data,\r\n  }\r\n  const response = await axios(reqObj)\r\n  alert(response.data.status)\r\n  dispatch(addNewClient([]))\r\n  return getClients\r\n}","import React, { Fragment, useState } from \"react\"\r\nimport \"../styles/addClient.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport * as Actions from \"../redux/actions/clients\"\r\n\r\nimport Header from \"../components/header\"\r\nimport Footer from \"../components/footer\"\r\n\r\nimport * as yup from \"yup\"\r\nimport { Formik } from \"formik\"\r\n\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\nconst schema = yup.object({\r\n  UserId: yup.string().required(),\r\n  Nombre: yup.string().required(),\r\n  ApellidoPat: yup.string().required(),\r\n  ApellidoMat: yup.string().required(),\r\n  Curp: yup.string().required(),\r\n  Colonia: yup.string().required(),\r\n  Direccion: yup.string().required(),\r\n  Celular: yup.string().required(),\r\n  Telefono: yup.string().required(),\r\n  Correo: yup.string().required(),\r\n  Adeudo: yup.string().required(),\r\n  Tipo: yup.string().required(),\r\n  Terms: yup.bool().required(),\r\n  FechaInscripcion: yup.bool().required(),\r\n})\r\n\r\nconst ClientView = ({\r\n  //actions\r\n  addClient,\r\n  editClient,\r\n  //props data\r\n  location: { state: { id } },\r\n  //redux prop\r\n  clients\r\n}) => {\r\n  console.log('id props: ', id)\r\n  /* const client = status.clients.filter(client => client.id === id)[0] */\r\n  \r\n  const client = clients.filter(client => client._id === id)[0] || null\r\n\r\n  //Inicializa el estado que se enviará con cadenas vacías\r\nconst [values, setValues] = useState({\r\nEstado: true,\r\n  UserId: client ? client.UserId : '',\r\n  Tipo: client ? client.Tipo : '',\r\n  Nombre: client ? client.Nombre : '',\r\n  ApellidoPat: client ? client.ApellidoPat : '',\r\n  ApellidoMat: client ? client.ApellidoMat : '',\r\n  Curp: client ? client.Curp : '',\r\n  Colonia: client ? client.Colonia : '',\r\n  Direccion: client ? client.Direccion : '',\r\n  Celular: client ? client.Celular : '',\r\n  Telefono: client ? client.Telefono : '',\r\n  Correo: client ? client.Correo : '',\r\n  Adeudo: client ? client.Adeudo : '',\r\n  FechaInscripcion: client ? client.FechaInscripcion : '',\r\n})\r\n\r\n/*   if (fakeId) {\r\n    setValues({ Nombre: client.Nombre })\r\n    fakeId = null\r\n  } */\r\n\r\n  //Función que vigila el cambio de estado del formulario\r\n  const handleChange = (event) => {\r\n    event.preventDefault()\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const sendData = (event) => {\r\n    event.preventDefault()\r\n    addClient(values)\r\n    // call actions -\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Fragment>\r\n        <div className=\"label-addClient\">\r\n          <Formik\r\n            validationSchema={schema}\r\n            onSubmit={sendData}\r\n            initialValues={{\r\n              Estado: true,\r\n              UserId: '',\r\n              Tipo: '',\r\n              Nombre: '',\r\n              ApellidoPat: '',\r\n              ApellidoMat: '',\r\n              Curp: '',\r\n              Colonia: '',\r\n              Direccion: '',\r\n              Celular: '',\r\n              Telefono: '',\r\n              Correo: '',\r\n              Adeudo: '',\r\n              FechaInscripcion: '',\r\n            }}\r\n          >\r\n            {({\r\n              handleBlur,\r\n              touched,\r\n              isValid,\r\n              isInvalid,\r\n              errors,\r\n            }) => (\r\n                <Form noValidate onSubmit={sendData}>\r\n                  <Form.Row>\r\n\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                      <Form.Label>Identificador</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Identificador\"\r\n                        name=\"UserId\"\r\n                        value={values.UserId}\r\n                        onChange={handleChange}\r\n                        isValid={touched.UserId && !errors.UserId}\r\n                        isInvalid={!!errors.UserId}\r\n                      />\r\n                      <Form.Control.Feedback>se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Nombre}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                      <Form.Label>Nombre</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre\"\r\n                        name=\"Nombre\"\r\n                        value={values.Nombre}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Nombre && !errors.Nombre}\r\n                        isInvalid={!!errors.Nombre}\r\n                      />\r\n                      <Form.Control.Feedback>se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Nombre}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik02\">\r\n                      <Form.Label>Primer Apellido</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Primer Apellido\"\r\n                        name=\"ApellidoPat\"\r\n                        value={values.ApellidoPat}\r\n                        onChange={handleChange}\r\n                        isValid={touched.ApellidoPat && !errors.ApellidoPat}\r\n                        isInvalid={!!errors.apellidoPat}\r\n                      />\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.ApellidoPat}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      md=\"4\"\r\n                      controlId=\"validationFormikUsername\"\r\n                    >\r\n                      <Form.Label>Segundo Apellido</Form.Label>\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Segundo Apellido\"\r\n                          aria-describedby=\"inputGroupPrepend\"\r\n                          name=\"ApellidoMat\"\r\n                          value={values.ApellidoMat}\r\n                          onChange={handleChange}\r\n                          isValid={\r\n                            touched.ApellidoMat && !errors.ApellidoMat\r\n                          }\r\n                          isInvalid={!!errors.ApellidoMat}\r\n                        />\r\n                        <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.ApellidoMat}\r\n                        </Form.Control.Feedback>\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik03\">\r\n                      <Form.Label>CURP</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"CURP\"\r\n                        name=\"Curp\"\r\n                        value={values.Curp}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Curp && !errors.Curp}\r\n                        isInvalid={!!errors.Curp}\r\n                      />\r\n\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Curp}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n                      <Form.Label>Dirección</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Calle y número exterior\"\r\n                        name=\"Direccion\"\r\n                        value={values.Direccion}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Direccion && !errors.Direccion}\r\n                        isInvalid={!!errors.Direccion}\r\n                      />\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Direccion}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n                      <Form.Label>Celular</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"1112223344\"\r\n                        name=\"Celular\"\r\n                        value={values.Celular}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Celular && !errors.Celular}\r\n                        isInvalid={!!errors.Celular}\r\n                      />\r\n\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Celular}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                      <Form.Label>Colonia</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Colonia\"\r\n                        name=\"Colonia\"\r\n                        value={values.Colonia}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Colonia && !errors.Colonia}\r\n                        isInvalid={!!errors.Colonia}\r\n                      />\r\n\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Colonia}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n                      <Form.Label>Teléfono</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"1112223344\"\r\n                        name=\"Telefono\"\r\n                        value={values.Telefono}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Telefono && !errors.Telefono}\r\n                        isInvalid={!!errors.Telefono}\r\n                      />\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Telefono}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n                      <Form.Label>Correo</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"asd@asd.com\"\r\n                        name=\"Correo\"\r\n                        value={values.Correo}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Correo && !errors.Correo}\r\n                        isInvalid={!!errors.Correo}\r\n                      />\r\n\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Correo}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md=\"2\" controlId=\"validationFormik06\">\r\n                      <Form.Label>Adeudo</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Adeudo\"\r\n                        name=\"Adeudo\"\r\n                        value={values.Adeudo}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Adeudo && !errors.Adeudo}\r\n                        isInvalid={!!errors.Adeudo}\r\n                      />\r\n\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Adeudo}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"2\" controlId=\"validationFormik07\">\r\n                      <Form.Label>Tipo de Cliente</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Tipo\"\r\n                        name=\"Tipo\"\r\n                        value={values.Tipo}\r\n                        onChange={handleChange}\r\n                        isValid={touched.Tipo && !errors.Tipo}\r\n                        isInvalid={!!errors.Tipo}\r\n                      />\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.Tipo}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"2\" controlId=\"validationFormik07\">\r\n                      <Form.Label>Fecha de ingreso</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        name=\"FechaInscripcion\"\r\n                        value={values.FechaInscripcion}\r\n                        onChange={handleChange}\r\n                        isValid={touched.FechaInscripcion && !errors.FechaInscripcion}\r\n                        isInvalid={!!errors.FechaInscripcion}\r\n                      />\r\n                      <Form.Control.Feedback>Se ve bien</Form.Control.Feedback>\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.FechaInscripcion}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                  </Form.Row>\r\n\r\n                  <Form.Group>\r\n                    <Form.Check\r\n                      required\r\n                      name=\"Terms\"\r\n                      label=\"Acepto los términos y condiciones\"\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.Terms}\r\n                      iaValid={touched.Terms}\r\n                      feedback={errors.Terms}\r\n                      id=\"validationFormik07\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button type=\"submit\">Aceptar</Button>\r\n                </Form>\r\n              )}\r\n          </Formik>\r\n        </div>\r\n      </Fragment>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clients: state.clients.clients\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(Actions, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientView)\r\n"],"sourceRoot":""}